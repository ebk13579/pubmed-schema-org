#!/usr/bin/env node

var util = require('util')
  , fs = require('fs')
  , path = require('path')
  , pubmed = require('..')
  , Dcat = require('dcat')
  , optimist = require('optimist')
  , colors = require('colors')
  , os = require('os');

var argv = optimist
  .usage(
    [
      'Usage: pubmed <command> [options] where command is:',
      '  - convert <id>',
      '  - help [command]',
    ].join(os.EOL)
  )
  .alias('h', 'help').describe('h', 'print usage')
  .alias('v', 'version').describe('v', 'print version number')
  .alias('q', 'quiet').describe('q', 'no verbose')
  .argv;

if(argv.h){
  console.log(optimist.help());
  process.exit(0);
}

if(argv.v){
  console.log(require('../package.json').version);
  process.exit(0);
}

var dcat = new Dcat(process.cwd());

if(!argv.q){
  dcat.on('log', console.log);
}

if (argv._[0] === 'convert'){

  (function(){
    var id = argv._[1].toString();

    pubmed.convert.call(dcat, id, {html:true}, function(err, pkg, html){
      if(err) _fail(err);
      fs.writeFile(path.join(dcat.root, 'JSONLD'), JSON.stringify(pkg, null, 2), _fail);
    });

  })();

} else if (argv._[0] === 'help'){

  console.log(optimist.help());

} else {

  _fail(new Error('invalid command'));

};

function _fail(err){
  if(err){
    console.error('pubmed'.grey +  ' ERR! '.red + err.message + (('code' in err) ? ' (' + err.code + ')': ''));
    process.exit(1);
  }
};
